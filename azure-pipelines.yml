# XF40Demo Xamarin.Forms Android pipeline
# https://github.com/irongut/XF40Demo
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- master

pool:
  vmImage: 'windows-2019'

variables:
- group: xf40demo-variables

# setup + restore nugets
steps:
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.x'
- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/*.sln'

# get keystore
- task: DownloadSecureFile@1
  inputs:
    secureFile: '$(keystore-filename)'

# set build version details
- task: android-manifest-version@1
  inputs:
    sourcePath: '$(Build.Repository.LocalPath)/XF40Demo/XF40Demo.Android/Properties/AndroidManifest.xml'
    versionCodeOption: 'buildid'
    versionCode: '$(Build.BuildId)'
    versionName: '$(Build.BuildId).$(Build.BuildNumber)'
    printFile: true

# build app
- task: XamarinAndroid@1
  inputs:
    projectFile: '**/*droid*.csproj'
    outputDirectory: '$(outputDirectory)'
    configuration: '$(buildConfiguration)'
    clean: true
    msbuildVersion: latest

# run unit tests
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

# sign app
- task: AndroidSigning@3
  inputs:
    apkFiles: '**/*.aab'
    apksignerKeystoreFile: '$(keystore-filename)'
    apksignerKeystorePassword: '$(keystore-password)'
    apksignerKeystoreAlias: '$(keystore-alias)'
    apksignerKeyPassword: '$(keystore-password)'
    apksignerArguments: '$(signer-arguments)'

# copy to staging folder
- task: CopyFiles@2
  inputs:
    Contents: '**/*.aab'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    flattenFolders: true
    preserveTimestamp: true

# publish build artifact
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'releaseBuild'
    publishLocation: 'Container'

# publish to GitHub releases
- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'irongut'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: 'v$(Build.BuildId).$(Build.BuildNumber)'
    title: 'v$(Build.BuildId).$(Build.BuildNumber) beta'
    isPreRelease: true
    changeLogCompareToRelease: 'lastNonDraftRelease'
    changeLogType: 'commitBased'
